@page "/Estadisticas"
@inherits INBase
@using ClasesAhorcado
@using System.Linq
@inject NavigationManager navegar
@inject IJSRuntime JS
@inject ILocalStorageService _localStorageService;

<PageTitle>Estadisticas</PageTitle>

<style>
    #my-pie-chart-container {
  display: flex;
  align-items: center;
}

#my-pie-chart {
    background: conic-gradient(maroon @(porcentajes[0])%, firebrick @(porcentajes[0])% @(porcentajes[1])%,
    coral @(porcentajes[1])% @(porcentajes[2])%, goldenrod @(porcentajes[2])% @(porcentajes[3])%,
    lightgreen @(porcentajes[3])% @(porcentajes[4])%, forestgreen @(porcentajes[4])% @(porcentajes[5])%,
    green @(porcentajes[5])% @(porcentajes[6])%, darkgreen @(porcentajes[6])%);
    border-radius: 50%;
    width: 300px;
    height: 300px;
}



#legenda {
  margin-left: 20px;
  background-color: white;
  padding: 5px;
}

.entry {
  display: flex;
  align-items: center;
}

.entry-color {
    height: 10px;
    width: 10px;
}

.entry-text {
  margin-left: 5px;
}
@foreach(string color in colors)
{
@($"#color-{color} {{background-color: {color};}}")
}

</style>

<div class="container mt-auto">
    <p class="h6">@msg</p>
    <div class="col-sm-auto">
            <p class="h3 text-center">Cant. de vidas al final de la partida</p>
            <!--svg id="graficavidas" style="width:100%;max-width:700px" viewBox="0 0 20 20"></svg-->
            <div id="my-pie-chart-container">
              <div id="my-pie-chart"></div>

              <div id="legenda">
                @for(int i=0; i<8;i++)
                {
                <div class="entry">
                  <div id=@($"color-{colors[i]}") class="entry-color"></div>
                  <div class="entry-text">@i vidas: @($"{cantv[i]}") </div>
                </div>
                }
              </div>
            </div>
    </div>
    <div class="col-sm-auto">
            <p class="h3 text-center">Victorias/Derrotas</p>
            <!--svg id="graficavd" style="width:100%;max-width:700px" viewBox="0 0 20 20"></svg-->
            <table class="table table-striped">
                <tbody>
                    <tr>
                        <td>Victorias</td>
                        <td> @victorias</td>
                    </tr>
                    <tr>
                        <td>Derrotas</td>
                        <td> @derrotas</td>
                    </tr>
                </tbody>
            </table>
            <svg height="200" width="200" viewBox="0 0 20 20">
              <circle r="10" cx="10" cy="10" fill="green" />
              <circle r="5" cx="10" cy="10" fill="transparent"
                      stroke="red"
                      stroke-width="10"
                      stroke-dasharray="calc(@(derrotas*100/total) * 31.4 / 100) 31.4"
                      transform="rotate(-90) translate(-20)" />
            </svg>
    </div>
</div>

@code {
    protected string yourName;
    protected int[] cantv=new int[] { 0, 0, 0, 0, 0, 0, 0, 0 };
    protected float[] porcentajes=new float[] { 0, 0, 0, 0, 0, 0, 0, 0 };
    protected int victorias=0, derrotas=0, total=1;
    protected string[] colors = new string[] { "maroon", "firebrick", "coral", "goldenrod", "lightgreen","forestgreen","green", "darkgreen"};

    protected async Task Graphs()
    {
        List<Juego> juegos = null;
        try
        {
            juegos = await this.RecuperarJuegos(yourName);
            if (juegos.Count() == 0)
            {
                throw new Exception();
            }
        }
        catch (Exception e)
        {
            juegos = new List<Juego>();
            msg = "Aun no tines juegos registrados!";
            return;
        }
        total = juegos.Count;
        if (total != 0)
        {
            msg = "";
        }
        else
        {
            total = 1;
        }
        victorias = (from Juego j in juegos where j.ResultadoFinal != Resultados.Perdiste select j).Count();
        derrotas = (from Juego j in juegos where j.ResultadoFinal == Resultados.Perdiste select j).Count();
        cantv = new int[8];
        for(int i=0; i <= 7; i++)
        {
            int c = (from Juego j in juegos where j.vidas == i select j).Count();
            cantv[i] = c;
            porcentajes[i] = cantv[..].Sum() * 100 / total;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        yourName = await _localStorageService.GetItemAsStringAsync("username");
        if (string.IsNullOrEmpty(yourName))
        {
            await _localStorageService.ClearAsync();
            navegar.NavigateTo("/");
        }
        await Graphs();
    } 
}
