@inject AuthenticationStateProvider _authStateProvider
@inject NavigationManager navegar
@inject ILocalStorageService _localStorageService;

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Ahorcado</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="home" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="ahorcado">
                <span class="oi oi-plus" aria-hidden="true"></span> Ahorcado Game
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="estadisticas">
                <span class="oi oi-graph" aria-hidden="true"></span>Estadisticas del jugador
            </NavLink>
        </div>
        <div class="footer nav-item px-3">
            <NavLink class="nav-link" @onclick="(async()=>await Salir())">
                <span class="oi oi-account-logout" aria-hidden="true"></span>Salir
            </NavLink>
        </div>
    </nav>
</div>

@code {
    #nullable enable
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Salir()
    {
        await _localStorageService.ClearAsync();
        navegar.NavigateTo("/");
    }
}
